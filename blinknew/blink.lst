
blink.elf:     file format elf32-pic30

Disassembly of section .aivt._AltADC1Interrupt:

0000012e <.aivt._AltADC1Interrupt>:
 12e:	76 14 00    	nop       
Disassembly of section .aivt._AltAddressError:

00000108 <.aivt._AltAddressError>:
 108:	76 14 00    	nop       
Disassembly of section .aivt._AltCNInterrupt:

0000013a <.aivt._AltCNInterrupt>:
 13a:	76 14 00    	nop       
Disassembly of section .aivt._AltCRCInterrupt:

0000019a <.aivt._AltCRCInterrupt>:
 19a:	76 14 00    	nop       
Disassembly of section .aivt._AltCTMUInterrupt:

000001ae <.aivt._AltCTMUInterrupt>:
 1ae:	76 14 00    	nop       
Disassembly of section .aivt._AltCompInterrupt:

00000138 <.aivt._AltCompInterrupt>:
 138:	76 14 00    	nop       
Disassembly of section .aivt._AltIC1Interrupt:

00000116 <.aivt._AltIC1Interrupt>:
 116:	76 14 00    	nop       
Disassembly of section .aivt._AltIC2Interrupt:

0000011e <.aivt._AltIC2Interrupt>:
 11e:	76 14 00    	nop       
Disassembly of section .aivt._AltIC3Interrupt:

0000015e <.aivt._AltIC3Interrupt>:
 15e:	76 14 00    	nop       
Disassembly of section .aivt._AltIC4Interrupt:

00000160 <.aivt._AltIC4Interrupt>:
 160:	76 14 00    	nop       
Disassembly of section .aivt._AltIC5Interrupt:

00000162 <.aivt._AltIC5Interrupt>:
 162:	76 14 00    	nop       
Disassembly of section .aivt._AltIC6Interrupt:

00000164 <.aivt._AltIC6Interrupt>:
 164:	76 14 00    	nop       
Disassembly of section .aivt._AltIC7Interrupt:

00000140 <.aivt._AltIC7Interrupt>:
 140:	76 14 00    	nop       
Disassembly of section .aivt._AltIC8Interrupt:

00000142 <.aivt._AltIC8Interrupt>:
 142:	76 14 00    	nop       
Disassembly of section .aivt._AltIC9Interrupt:

000001ce <.aivt._AltIC9Interrupt>:
 1ce:	76 14 00    	nop       
Disassembly of section .aivt._AltINT0Interrupt:

00000114 <.aivt._AltINT0Interrupt>:
 114:	76 14 00    	nop       
Disassembly of section .aivt._AltINT1Interrupt:

0000013c <.aivt._AltINT1Interrupt>:
 13c:	76 14 00    	nop       
Disassembly of section .aivt._AltINT2Interrupt:

0000014e <.aivt._AltINT2Interrupt>:
 14e:	76 14 00    	nop       
Disassembly of section .aivt._AltINT3Interrupt:

0000017e <.aivt._AltINT3Interrupt>:
 17e:	76 14 00    	nop       
Disassembly of section .aivt._AltINT4Interrupt:

00000180 <.aivt._AltINT4Interrupt>:
 180:	76 14 00    	nop       
Disassembly of section .aivt._AltInterrupt14:

00000130 <.aivt._AltInterrupt14>:
 130:	76 14 00    	nop       
Disassembly of section .aivt._AltInterrupt15:

00000132 <.aivt._AltInterrupt15>:
 132:	76 14 00    	nop       
Disassembly of section .aivt._AltInterrupt21:

0000013e <.aivt._AltInterrupt21>:
 13e:	76 14 00    	nop       
Disassembly of section .aivt._AltInterrupt24:

00000144 <.aivt._AltInterrupt24>:
 144:	76 14 00    	nop       
Disassembly of section .aivt._AltInterrupt34:

00000158 <.aivt._AltInterrupt34>:
 158:	76 14 00    	nop       
Disassembly of section .aivt._AltInterrupt35:

0000015a <.aivt._AltInterrupt35>:
 15a:	76 14 00    	nop       
Disassembly of section .aivt._AltInterrupt36:

0000015c <.aivt._AltInterrupt36>:
 15c:	76 14 00    	nop       
Disassembly of section .aivt._AltInterrupt4:

0000011c <.aivt._AltInterrupt4>:
 11c:	76 14 00    	nop       
Disassembly of section .aivt._AltInterrupt46:

00000170 <.aivt._AltInterrupt46>:
 170:	76 14 00    	nop       
Disassembly of section .aivt._AltInterrupt47:

00000172 <.aivt._AltInterrupt47>:
 172:	76 14 00    	nop       
Disassembly of section .aivt._AltInterrupt48:

00000174 <.aivt._AltInterrupt48>:
 174:	76 14 00    	nop       
Disassembly of section .aivt._AltInterrupt51:

0000017a <.aivt._AltInterrupt51>:
 17a:	76 14 00    	nop       
Disassembly of section .aivt._AltInterrupt52:

0000017c <.aivt._AltInterrupt52>:
 17c:	76 14 00    	nop       
Disassembly of section .aivt._AltInterrupt55:

00000182 <.aivt._AltInterrupt55>:
 182:	76 14 00    	nop       
Disassembly of section .aivt._AltInterrupt56:

00000184 <.aivt._AltInterrupt56>:
 184:	76 14 00    	nop       
Disassembly of section .aivt._AltInterrupt57:

00000186 <.aivt._AltInterrupt57>:
 186:	76 14 00    	nop       
Disassembly of section .aivt._AltInterrupt58:

00000188 <.aivt._AltInterrupt58>:
 188:	76 14 00    	nop       
Disassembly of section .aivt._AltInterrupt59:

0000018a <.aivt._AltInterrupt59>:
 18a:	76 14 00    	nop       
Disassembly of section .aivt._AltInterrupt60:

0000018c <.aivt._AltInterrupt60>:
 18c:	76 14 00    	nop       
Disassembly of section .aivt._AltInterrupt61:

0000018e <.aivt._AltInterrupt61>:
 18e:	76 14 00    	nop       
Disassembly of section .aivt._AltInterrupt63:

00000192 <.aivt._AltInterrupt63>:
 192:	76 14 00    	nop       
Disassembly of section .aivt._AltInterrupt64:

00000194 <.aivt._AltInterrupt64>:
 194:	76 14 00    	nop       
Disassembly of section .aivt._AltInterrupt68:

0000019c <.aivt._AltInterrupt68>:
 19c:	76 14 00    	nop       
Disassembly of section .aivt._AltInterrupt69:

0000019e <.aivt._AltInterrupt69>:
 19e:	76 14 00    	nop       
Disassembly of section .aivt._AltInterrupt70:

000001a0 <.aivt._AltInterrupt70>:
 1a0:	76 14 00    	nop       
Disassembly of section .aivt._AltInterrupt71:

000001a2 <.aivt._AltInterrupt71>:
 1a2:	76 14 00    	nop       
Disassembly of section .aivt._AltInterrupt73:

000001a6 <.aivt._AltInterrupt73>:
 1a6:	76 14 00    	nop       
Disassembly of section .aivt._AltInterrupt74:

000001a8 <.aivt._AltInterrupt74>:
 1a8:	76 14 00    	nop       
Disassembly of section .aivt._AltInterrupt75:

000001aa <.aivt._AltInterrupt75>:
 1aa:	76 14 00    	nop       
Disassembly of section .aivt._AltInterrupt76:

000001ac <.aivt._AltInterrupt76>:
 1ac:	76 14 00    	nop       
Disassembly of section .aivt._AltInterrupt78:

000001b0 <.aivt._AltInterrupt78>:
 1b0:	76 14 00    	nop       
Disassembly of section .aivt._AltInterrupt79:

000001b2 <.aivt._AltInterrupt79>:
 1b2:	76 14 00    	nop       
Disassembly of section .aivt._AltInterrupt80:

000001b4 <.aivt._AltInterrupt80>:
 1b4:	76 14 00    	nop       
Disassembly of section .aivt._AltLVDInterrupt:

000001a4 <.aivt._AltLVDInterrupt>:
 1a4:	76 14 00    	nop       
Disassembly of section .aivt._AltMI2C1Interrupt:

00000136 <.aivt._AltMI2C1Interrupt>:
 136:	76 14 00    	nop       
Disassembly of section .aivt._AltMI2C2Interrupt:

00000178 <.aivt._AltMI2C2Interrupt>:
 178:	76 14 00    	nop       
Disassembly of section .aivt._AltMI2C3Interrupt:

000001be <.aivt._AltMI2C3Interrupt>:
 1be:	76 14 00    	nop       
Disassembly of section .aivt._AltMathError:

0000010c <.aivt._AltMathError>:
 10c:	76 14 00    	nop       
Disassembly of section .aivt._AltOC1Interrupt:

00000118 <.aivt._AltOC1Interrupt>:
 118:	76 14 00    	nop       
Disassembly of section .aivt._AltOC2Interrupt:

00000120 <.aivt._AltOC2Interrupt>:
 120:	76 14 00    	nop       
Disassembly of section .aivt._AltOC3Interrupt:

00000146 <.aivt._AltOC3Interrupt>:
 146:	76 14 00    	nop       
Disassembly of section .aivt._AltOC4Interrupt:

00000148 <.aivt._AltOC4Interrupt>:
 148:	76 14 00    	nop       
Disassembly of section .aivt._AltOC5Interrupt:

00000166 <.aivt._AltOC5Interrupt>:
 166:	76 14 00    	nop       
Disassembly of section .aivt._AltOC6Interrupt:

00000168 <.aivt._AltOC6Interrupt>:
 168:	76 14 00    	nop       
Disassembly of section .aivt._AltOC7Interrupt:

0000016a <.aivt._AltOC7Interrupt>:
 16a:	76 14 00    	nop       
Disassembly of section .aivt._AltOC8Interrupt:

0000016c <.aivt._AltOC8Interrupt>:
 16c:	76 14 00    	nop       
Disassembly of section .aivt._AltOC9Interrupt:

000001cc <.aivt._AltOC9Interrupt>:
 1cc:	76 14 00    	nop       
Disassembly of section .aivt._AltOscillatorFail:

00000106 <.aivt._AltOscillatorFail>:
 106:	76 14 00    	nop       
Disassembly of section .aivt._AltPMPInterrupt:

0000016e <.aivt._AltPMPInterrupt>:
 16e:	76 14 00    	nop       
Disassembly of section .aivt._AltRTCCInterrupt:

00000190 <.aivt._AltRTCCInterrupt>:
 190:	76 14 00    	nop       
Disassembly of section .aivt._AltReservedTrap0:

00000104 <.aivt._AltReservedTrap0>:
 104:	76 14 00    	nop       
Disassembly of section .aivt._AltReservedTrap5:

0000010e <.aivt._AltReservedTrap5>:
 10e:	76 14 00    	nop       
Disassembly of section .aivt._AltReservedTrap6:

00000110 <.aivt._AltReservedTrap6>:
 110:	76 14 00    	nop       
Disassembly of section .aivt._AltReservedTrap7:

00000112 <.aivt._AltReservedTrap7>:
 112:	76 14 00    	nop       
Disassembly of section .aivt._AltSI2C1Interrupt:

00000134 <.aivt._AltSI2C1Interrupt>:
 134:	76 14 00    	nop       
Disassembly of section .aivt._AltSI2C2Interrupt:

00000176 <.aivt._AltSI2C2Interrupt>:
 176:	76 14 00    	nop       
Disassembly of section .aivt._AltSI2C3Interrupt:

000001bc <.aivt._AltSI2C3Interrupt>:
 1bc:	76 14 00    	nop       
Disassembly of section .aivt._AltSPI1ErrInterrupt:

00000126 <.aivt._AltSPI1ErrInterrupt>:
 126:	76 14 00    	nop       
Disassembly of section .aivt._AltSPI1Interrupt:

00000128 <.aivt._AltSPI1Interrupt>:
 128:	76 14 00    	nop       
Disassembly of section .aivt._AltSPI2ErrInterrupt:

00000154 <.aivt._AltSPI2ErrInterrupt>:
 154:	76 14 00    	nop       
Disassembly of section .aivt._AltSPI2Interrupt:

00000156 <.aivt._AltSPI2Interrupt>:
 156:	76 14 00    	nop       
Disassembly of section .aivt._AltSPI3ErrInterrupt:

000001c8 <.aivt._AltSPI3ErrInterrupt>:
 1c8:	76 14 00    	nop       
Disassembly of section .aivt._AltSPI3Interrupt:

000001ca <.aivt._AltSPI3Interrupt>:
 1ca:	76 14 00    	nop       
Disassembly of section .aivt._AltStackError:

0000010a <.aivt._AltStackError>:
 10a:	76 14 00    	nop       
Disassembly of section .aivt._AltT1Interrupt:

0000011a <.aivt._AltT1Interrupt>:
 11a:	76 14 00    	nop       
Disassembly of section .aivt._AltT2Interrupt:

00000122 <.aivt._AltT2Interrupt>:
 122:	76 14 00    	nop       
Disassembly of section .aivt._AltT3Interrupt:

00000124 <.aivt._AltT3Interrupt>:
 124:	76 14 00    	nop       
Disassembly of section .aivt._AltT4Interrupt:

0000014a <.aivt._AltT4Interrupt>:
 14a:	76 14 00    	nop       
Disassembly of section .aivt._AltT5Interrupt:

0000014c <.aivt._AltT5Interrupt>:
 14c:	76 14 00    	nop       
Disassembly of section .aivt._AltU1ErrInterrupt:

00000196 <.aivt._AltU1ErrInterrupt>:
 196:	76 14 00    	nop       
Disassembly of section .aivt._AltU1RXInterrupt:

0000012a <.aivt._AltU1RXInterrupt>:
 12a:	76 14 00    	nop       
Disassembly of section .aivt._AltU1TXInterrupt:

0000012c <.aivt._AltU1TXInterrupt>:
 12c:	76 14 00    	nop       
Disassembly of section .aivt._AltU2ErrInterrupt:

00000198 <.aivt._AltU2ErrInterrupt>:
 198:	76 14 00    	nop       
Disassembly of section .aivt._AltU2RXInterrupt:

00000150 <.aivt._AltU2RXInterrupt>:
 150:	76 14 00    	nop       
Disassembly of section .aivt._AltU2TXInterrupt:

00000152 <.aivt._AltU2TXInterrupt>:
 152:	76 14 00    	nop       
Disassembly of section .aivt._AltU3ErrInterrupt:

000001b6 <.aivt._AltU3ErrInterrupt>:
 1b6:	76 14 00    	nop       
Disassembly of section .aivt._AltU3RXInterrupt:

000001b8 <.aivt._AltU3RXInterrupt>:
 1b8:	76 14 00    	nop       
Disassembly of section .aivt._AltU3TXInterrupt:

000001ba <.aivt._AltU3TXInterrupt>:
 1ba:	76 14 00    	nop       
Disassembly of section .aivt._AltU4ErrInterrupt:

000001c2 <.aivt._AltU4ErrInterrupt>:
 1c2:	76 14 00    	nop       
Disassembly of section .aivt._AltU4RXInterrupt:

000001c4 <.aivt._AltU4RXInterrupt>:
 1c4:	76 14 00    	nop       
Disassembly of section .aivt._AltU4TXInterrupt:

000001c6 <.aivt._AltU4TXInterrupt>:
 1c6:	76 14 00    	nop       
Disassembly of section .aivt._AltUSB1Interrupt:

000001c0 <.aivt._AltUSB1Interrupt>:
 1c0:	76 14 00    	nop       
Disassembly of section .reset:

00000000 <.reset>:
   0:	10 11 04    	goto      0x1110 <__reset>
   2:	00 00 00 
Disassembly of section .text:

00001110 <__reset>:
    1110:	0f 80 20    	mov.w     #0x800, w15
    1112:	0e ff 27    	mov.w     #0x7ff0, w14
    1114:	0e 01 88    	mov.w     w14, 0x20
    1116:	00 00 00    	nop       
    1118:	00 00 20    	mov.w     #0x0, w0
    111a:	00 00 e0    	cp0.w     w0
    111c:	02 00 32    	bra       Z, 0x1122 <CORCON_RESET>
    111e:	00 01 20    	mov.w     #0x10, w0
    1120:	20 02 88    	mov.w     w0, 0x44

00001122 <CORCON_RESET>:
    1122:	14 00 07    	rcall     0x114c <__psv_init>
    1124:	82 00 07    	rcall     0x122a <__crt_start_mode> <__crt_start_mode_normal>
    1126:	00 00 e0    	cp0.w     w0
    1128:	03 00 3a    	bra       NZ, 0x1130 <L11>
    112a:	00 00 20    	mov.w     #0x0, w0
    112c:	01 00 20    	mov.w     #0x0, w1
    112e:	02 00 37    	bra       0x1134 <L21>

00001130 <L11>:
    1130:	00 00 20    	mov.w     #0x0, w0
    1132:	01 00 20    	mov.w     #0x0, w1

00001134 <L21>:
    1134:	81 0f 70    	ior.w     w0, w1, [w15]
    1136:	01 00 32    	bra       Z, 0x113a <L12>
    1138:	14 00 07    	rcall     0x1162 <__data_init> <__data_init_da>

0000113a <L12>:
    113a:	00 00 20    	mov.w     #0x0, w0
    113c:	00 00 e0    	cp0.w     w0
    113e:	02 00 32    	bra       Z, 0x1144 <L13>
    1140:	00 00 02    	call      0x0 <__DEFAULT_VECTOR-0x110c>
    1142:	00 00 00 

00001144 <L13>:
    1144:	10 14 02    	call      0x1410 <_main>
    1146:	00 00 00 
    1148:	00 40 da    	break     
    114a:	00 00 fe    	reset     

0000114c <__psv_init>:
    114c:	44 40 a9    	bclr.b    0x44, #0x2
    114e:	20 00 20    	mov.w     #0x2, w0
    1150:	00 00 e0    	cp0.w     w0
    1152:	03 00 32    	bra       Z, 0x115a <L14>
    1154:	10 00 20    	mov.w     #0x1, w0
    1156:	90 01 88    	mov.w     w0, 0x32
    1158:	44 40 a8    	bset.b    0x44, #0x2

0000115a <L14>:
    115a:	00 00 06    	return    

0000115c <__long_indirect_call>:
    115c:	8a 1f 78    	mov.w     w10, [w15++]
    115e:	8b 1f 78    	mov.w     w11, [w15++]
    1160:	00 00 06    	return    

00001162 <__data_init>:
    1162:	a1 02 88    	mov.w     w1, 0x54
    1164:	80 04 78    	mov.w     w0, w9
    1166:	00 00 eb    	clr.w     w0
    1168:	1f 00 37    	bra       0x11a8 <L41>

0000116a <L11>:
    116a:	e2 84 44    	add.w     w9, #0x2, w9
    116c:	54 a0 b4    	addc.w    0x54
    116e:	99 05 ba    	tblrdl.w  [w9], w11
    1170:	e2 84 44    	add.w     w9, #0x2, w9
    1172:	54 a0 b4    	addc.w    0x54
    1174:	99 06 ba    	tblrdl.w  [w9], w13
    1176:	e2 84 44    	add.w     w9, #0x2, w9
    1178:	54 a0 b4    	addc.w    0x54
    117a:	00 06 eb    	clr.w     w12
    117c:	47 6f de    	lsr.w     w13, #0x7, w14
    117e:	fd 07 b2    	and.w     #0x7f, w13
    1180:	ae 01 88    	mov.w     w14, 0x34
    1182:	63 6c e1    	cp.b      w13, #0x3
    1184:	03 00 3a    	bra       NZ, 0x118c <L21>
    1186:	ea ff 07    	rcall     0x115c <__long_indirect_call>
    1188:	00 00 eb    	clr.w     w0
    118a:	0e 00 37    	bra       0x11a8 <L41>

0000118c <L21>:
    118c:	60 6c e1    	cp.b      w13, #0x0
    118e:	08 00 3a    	bra       NZ, 0x11a0 <L22>

00001190 <L91>:
    1190:	00 4d eb    	clr.b     [w10]
    1192:	0a 05 e8    	inc.w     w10, w10
    1194:	02 00 39    	bra       NC, 0x119a <L81>
    1196:	34 20 ec    	inc.w     0x34
    1198:	0a f0 a0    	bset.w    w10, #0xf

0000119a <L81>:
    119a:	8b 05 e9    	dec.w     w11, w11
    119c:	f9 ff 3e    	bra       GTU, 0x1190 <L91>
    119e:	04 00 37    	bra       0x11a8 <L41>

000011a0 <L22>:
    11a0:	61 68 e1    	cp.w      w13, #0x1
    11a2:	01 00 32    	bra       Z, 0x11a6 <L31>
    11a4:	00 86 eb    	setm.w    w12

000011a6 <L31>:
    11a6:	0b 00 07    	rcall     0x11be <L13> <__memcpyd3extended>

000011a8 <L41>:
    11a8:	19 c7 ba    	tblrdh.b  [w9], w14
    11aa:	19 05 ba    	tblrdl.w  [w9], w10
    11ac:	0e 04 e0    	cp0.b     w14
    11ae:	03 00 3a    	bra       NZ, 0x11b6 <L12>
    11b0:	0a 00 e0    	cp0.w     w10
    11b2:	db ff 3a    	bra       NZ, 0x116a <L11>
    11b4:	00 00 06    	return    

000011b6 <L12>:
    11b6:	fe 07 b2    	and.w     #0x7f, w14
    11b8:	ae 02 88    	mov.w     w14, 0x54
    11ba:	8a 04 78    	mov.w     w10, w9
    11bc:	f5 ff 37    	bra       0x11a8 <L41>

000011be <L13>:
    11be:	0c d0 a3    	btst.c    w12, #0xd
    11c0:	e2 0f 4d    	addc.w    w10, #0x2, [w15]
    11c2:	1c 00 39    	bra       NC, 0x11fc <L23>
    11c4:	89 02 78    	mov.w     w9, w5
    11c6:	35 4d ba    	tblrdl.b  [w5++], [w10]
    11c8:	0a 05 e8    	inc.w     w10, w10
    11ca:	02 00 39    	bra       NC, 0x11d0 <L32>
    11cc:	34 20 ec    	inc.w     0x34
    11ce:	0a f0 a0    	bset.w    w10, #0xf

000011d0 <L32>:
    11d0:	8b 05 e9    	dec.w     w11, w11
    11d2:	0f 00 32    	bra       Z, 0x11f2 <L42>
    11d4:	25 4d ba    	tblrdl.b  [w5--], [w10]
    11d6:	0a 05 e8    	inc.w     w10, w10
    11d8:	02 00 39    	bra       NC, 0x11de <L33>
    11da:	34 20 ec    	inc.w     0x34
    11dc:	0a f0 a0    	bset.w    w10, #0xf

000011de <L33>:
    11de:	8b 05 e9    	dec.w     w11, w11
    11e0:	08 00 32    	bra       Z, 0x11f2 <L42>
    11e2:	0c 00 e0    	cp0.w     w12
    11e4:	06 00 32    	bra       Z, 0x11f2 <L42>
    11e6:	15 cd ba    	tblrdh.b  [w5], [w10]
    11e8:	0a 05 e8    	inc.w     w10, w10
    11ea:	02 00 39    	bra       NC, 0x11f0 <L34>
    11ec:	34 20 ec    	inc.w     0x34
    11ee:	0a f0 a0    	bset.w    w10, #0xf

000011f0 <L34>:
    11f0:	8b 05 e9    	dec.w     w11, w11

000011f2 <L42>:
    11f2:	89 84 e8    	inc2.w    w9, w9
    11f4:	54 a0 b4    	addc.w    0x54
    11f6:	0b 00 e0    	cp0.w     w11
    11f8:	e2 ff 3a    	bra       NZ, 0x11be <L13> <__memcpyd3extended>
    11fa:	00 00 06    	return    

000011fc <L23>:
    11fc:	99 02 ba    	tblrdl.w  [w9], w5
    11fe:	05 5d 78    	mov.b     w5, [w10++]
    1200:	8b 05 e9    	dec.w     w11, w11
    1202:	f7 ff 32    	bra       Z, 0x11f2 <L42>
    1204:	c8 2a de    	lsr.w     w5, #0x8, w5
    1206:	05 5d 78    	mov.b     w5, [w10++]
    1208:	8b 05 e9    	dec.w     w11, w11
    120a:	f3 ff 32    	bra       Z, 0x11f2 <L42>
    120c:	0c 00 e0    	cp0.w     w12
    120e:	f1 ff 32    	bra       Z, 0x11f2 <L42>
    1210:	19 dd ba    	tblrdh.b  [w9], [w10++]
    1212:	ee ff 37    	bra       0x11f0 <L34>

00001214 <_time>:
    1214:	00 01 78    	mov.w     w0, w2
    1216:	10 01 e2    	cp0.w     0x110
    1218:	02 00 35    	bra       LT, 0x121e <.L2>
    121a:	10 61 a8    	bset.b    0x110, #0x3
    121c:	11 e1 a8    	bset.b    0x111, #0x7

0000121e <.L2>:
    121e:	30 08 80    	mov.w     0x106, w0
    1220:	41 08 80    	mov.w     0x108, w1
    1222:	02 00 e0    	cp0.w     w2
    1224:	01 00 32    	bra       Z, 0x1228 <.L3>
    1226:	00 89 be    	mov.d     w0, [w2]

00001228 <.L3>:
    1228:	00 00 06    	return    

0000122a <__crt_start_mode>:
    122a:	00 00 05    	retlw.w   #0x0, w0

0000122c <___eqsf2>:
    122c:	14 00 20    	mov.w     #0x1, w4
    122e:	02 00 37    	bra       0x1234 <__fcompare>

00001230 <___gesf2>:
    1230:	f4 ff 2f    	mov.w     #0xffff, w4
    1232:	00 00 37    	bra       0x1234 <__fcompare>

00001234 <__fcompare>:
    1234:	88 9f be    	mov.d     w8, [w15++]
    1236:	8a 9f be    	mov.d     w10, [w15++]
    1238:	84 1f 78    	mov.w     w4, [w15++]
    123a:	17 00 07    	rcall     0x126a <__funpack2>
    123c:	4f 00 78    	mov.w     [--w15], w0
    123e:	11 00 33    	bra       N, 0x1262 <exit>
    1240:	f0 ff 2f    	mov.w     #0xffff, w0
    1242:	83 8f 6c    	xor.w     w9, w3, [w15]
    1244:	06 00 3b    	bra       NN, 0x1252 <comparemag>
    1246:	04 05 65    	and.w     w10, w4, w10
    1248:	0a 00 a7    	btsc.w    w10, #0x0
    124a:	08 00 37    	bra       0x125c <returnEqual>
    124c:	09 f0 a6    	btss.w    w9, #0xf
    124e:	10 00 20    	mov.w     #0x1, w0
    1250:	08 00 37    	bra       0x1262 <exit>

00001252 <comparemag>:
    1252:	82 0f 54    	sub.w     w8, w2, [w15]
    1254:	83 8f 5c    	subb.w    w9, w3, [w15]
    1256:	03 00 39    	bra       NC, 0x125e <adjust>
    1258:	10 00 20    	mov.w     #0x1, w0
    125a:	01 00 3e    	bra       GTU, 0x125e <adjust>

0000125c <returnEqual>:
    125c:	00 00 20    	mov.w     #0x0, w0

0000125e <adjust>:
    125e:	09 f0 a7    	btsc.w    w9, #0xf
    1260:	00 00 ea    	neg.w     w0, w0

00001262 <exit>:
    1262:	4f 05 be    	mov.d     [--w15], w10
    1264:	4f 04 be    	mov.d     [--w15], w8
    1266:	00 00 e0    	cp0.w     w0
    1268:	00 00 06    	return    

0000126a <__funpack2>:
    126a:	00 04 be    	mov.d     w0, w8
    126c:	06 00 07    	rcall     0x127a <__funpack>
    126e:	00 03 be    	mov.d     w0, w6
    1270:	04 05 be    	mov.d     w4, w10
    1272:	02 00 be    	mov.d     w2, w0
    1274:	02 00 07    	rcall     0x127a <__funpack>
    1276:	84 4f 75    	ior.b     w10, w4, [w15]
    1278:	00 00 06    	return    

0000127a <__funpack>:
    127a:	c7 0a de    	lsr.w     w1, #0x7, w5
    127c:	f1 07 b2    	and.w     #0x7f, w1
    127e:	f5 0f b2    	and.w     #0xff, w5
    1280:	08 00 32    	bra       Z, 0x1292 <zeroorsub>
    1282:	e1 cf 42    	add.b     w5, #0x1, [w15]
    1284:	02 00 32    	bra       Z, 0x128a <nanorinf>

00001286 <finitereturn>:
    1286:	01 70 a0    	bset.w    w1, #0x7
    1288:	24 00 05    	retlw.w   #0x2, w4

0000128a <nanorinf>:
    128a:	81 0f 70    	ior.w     w0, w1, [w15]
    128c:	01 00 32    	bra       Z, 0x1290 <infinite>
    128e:	04 08 05    	retlw.w   #0x80, w4

00001290 <infinite>:
    1290:	44 00 05    	retlw.w   #0x4, w4

00001292 <zeroorsub>:
    1292:	81 0f 70    	ior.w     w0, w1, [w15]
    1294:	02 00 3a    	bra       NZ, 0x129a <subnormal>
    1296:	14 00 05    	retlw.w   #0x1, w4

00001298 <normalize>:
    1298:	85 02 e9    	dec.w     w5, w5

0000129a <subnormal>:
    129a:	00 00 40    	add.w     w0, w0, w0
    129c:	81 c0 48    	addc.b    w1, w1, w1
    129e:	fc ff 3b    	bra       NN, 0x1298 <normalize>
    12a0:	01 70 a0    	bset.w    w1, #0x7
    12a2:	24 00 05    	retlw.w   #0x2, w4

000012a4 <_difftime>:
    12a4:	06 18 28    	mov.w     #0x8180, w6
    12a6:	57 c5 27    	mov.w     #0x7c55, w7
    12a8:	02 02 43    	add.w     w6, w2, w4
    12aa:	83 82 4b    	addc.w    w7, w3, w5
    12ac:	00 00 43    	add.w     w6, w0, w0
    12ae:	81 80 4b    	addc.w    w7, w1, w1
    12b0:	80 0f 52    	sub.w     w4, w0, [w15]
    12b2:	81 8f 5a    	subb.w    w5, w1, [w15]
    12b4:	03 00 3c    	bra       GT, 0x12bc <.L2>
    12b6:	04 00 50    	sub.w     w0, w4, w0
    12b8:	85 80 58    	subb.w    w1, w5, w1
    12ba:	05 00 37    	bra       0x12c6 <___floatsisf>

000012bc <.L2>:
    12bc:	00 00 52    	sub.w     w4, w0, w0
    12be:	81 80 5a    	subb.w    w5, w1, w1
    12c0:	02 00 07    	rcall     0x12c6 <___floatsisf>
    12c2:	01 f0 a2    	btg.w     w1, #0xf
    12c4:	00 00 06    	return    

000012c6 <___floatsisf>:
    12c6:	4f 89 de    	asr.w     w1, #0xf, w2
    12c8:	82 01 78    	mov.w     w2, w3
    12ca:	00 00 37    	bra       0x12cc <___floatdisf>

000012cc <___floatdisf>:
    12cc:	88 1f 78    	mov.w     w8, [w15++]
    12ce:	03 04 78    	mov.w     w3, w8
    12d0:	03 00 e0    	cp0.w     w3
    12d2:	07 00 3d    	bra       GE, 0x12e2 <notspecial>

000012d4 <negative>:
    12d4:	60 00 10    	subr.w    w0, #0x0, w0
    12d6:	e0 80 18    	subbr.w   w1, #0x0, w1
    12d8:	60 01 19    	subbr.w   w2, #0x0, w2
    12da:	e0 81 19    	subbr.w   w3, #0x0, w3
    12dc:	02 00 3b    	bra       NN, 0x12e2 <notspecial>
    12de:	01 f0 2d    	mov.w     #0xdf00, w1
    12e0:	03 00 37    	bra       0x12e8 <return0>

000012e2 <notspecial>:
    12e2:	04 00 07    	rcall     0x12ec <___floatundisf>
    12e4:	08 f0 a7    	btsc.w    w8, #0xf
    12e6:	01 f0 a0    	bset.w    w1, #0xf

000012e8 <return0>:
    12e8:	4f 04 78    	mov.w     [--w15], w8
    12ea:	00 00 06    	return    

000012ec <___floatundisf>:
    12ec:	88 9f be    	mov.d     w8, [w15++]
    12ee:	8a 9f be    	mov.d     w10, [w15++]
    12f0:	00 82 70    	ior.w     w1, w0, w4
    12f2:	04 02 71    	ior.w     w2, w4, w4
    12f4:	04 82 71    	ior.w     w3, w4, w4
    12f6:	26 00 32    	bra       Z, 0x1344 <return0>
    12f8:	00 04 be    	mov.d     w0, w8
    12fa:	02 00 be    	mov.d     w2, w0
    12fc:	60 11 b8    	mul.uu    w2, #0x0, w2
    12fe:	6b 09 20    	mov.w     #0x96, w11
    1300:	95 02 20    	mov.w     #0x29, w5
    1302:	01 82 cf    	ff1l      w1, w4
    1304:	0a 00 39    	bra       NC, 0x131a <fixshift>
    1306:	05 41 b1    	sub.b     #0x10, w5
    1308:	00 82 cf    	ff1l      w0, w4
    130a:	07 00 39    	bra       NC, 0x131a <fixshift>
    130c:	05 41 b1    	sub.b     #0x10, w5
    130e:	09 82 cf    	ff1l      w9, w4
    1310:	04 00 39    	bra       NC, 0x131a <fixshift>
    1312:	05 41 b1    	sub.b     #0x10, w5
    1314:	08 82 cf    	ff1l      w8, w4
    1316:	01 00 39    	bra       NC, 0x131a <fixshift>
    1318:	05 41 b1    	sub.b     #0x10, w5

0000131a <fixshift>:
    131a:	05 42 52    	sub.b     w4, w5, w4
    131c:	12 00 32    	bra       Z, 0x1342 <round>
    131e:	0a 00 3b    	bra       NN, 0x1334 <shiftleft>

00001320 <shiftright>:
    1320:	82 81 71    	ior.w     w3, w2, w3
    1322:	61 01 64    	and.w     w8, #0x1, w2
    1324:	81 00 d1    	lsr.w     w1, w1
    1326:	00 80 d3    	rrc.w     w0, w0
    1328:	89 84 d3    	rrc.w     w9, w9
    132a:	08 84 d3    	rrc.w     w8, w8
    132c:	8b 05 e8    	inc.w     w11, w11
    132e:	04 42 e8    	inc.b     w4, w4
    1330:	f7 ff 3a    	bra       NZ, 0x1320 <shiftright>
    1332:	07 00 37    	bra       0x1342 <round>

00001334 <shiftleft>:
    1334:	08 04 44    	add.w     w8, w8, w8
    1336:	89 84 4c    	addc.w    w9, w9, w9
    1338:	00 00 48    	addc.w    w0, w0, w0
    133a:	81 80 48    	addc.w    w1, w1, w1
    133c:	8b 05 e9    	dec.w     w11, w11
    133e:	04 42 e9    	dec.b     w4, w4
    1340:	f9 ff 3a    	bra       NZ, 0x1334 <shiftleft>

00001342 <round>:
    1342:	03 00 07    	rcall     0x134a <__fpack>

00001344 <return0>:
    1344:	4f 05 be    	mov.d     [--w15], w10
    1346:	4f 04 be    	mov.d     [--w15], w8
    1348:	00 00 06    	return    

0000134a <__fpack>:
    134a:	81 00 20    	mov.w     #0x8, w1
    134c:	61 80 55    	sub.w     w11, #0x1, w0
    134e:	0b 00 3d    	bra       GE, 0x1366 <notsubnormal>
    1350:	0b 00 20    	mov.w     #0x0, w11
    1352:	61 fe 2f    	mov.w     #0xffe6, w1
    1354:	01 00 e1    	cp.w      w0, w1
    1356:	1d 00 34    	bra       LE, 0x1392 <zerosig>

00001358 <subnormal>:
    1358:	82 81 71    	ior.w     w3, w2, w3
    135a:	61 01 64    	and.w     w8, #0x1, w2
    135c:	89 04 d1    	lsr.w     w9, w9
    135e:	08 84 d3    	rrc.w     w8, w8
    1360:	00 00 e8    	inc.w     w0, w0
    1362:	fa ff 3a    	bra       NZ, 0x1358 <subnormal>
    1364:	71 00 20    	mov.w     #0x7, w1

00001366 <notsubnormal>:
    1366:	61 00 64    	and.w     w8, #0x1, w0
    1368:	03 00 70    	ior.w     w0, w3, w0
    136a:	02 00 60    	and.w     w0, w2, w0
    136c:	09 00 32    	bra       Z, 0x1380 <packupandgo>
    136e:	61 04 44    	add.w     w8, #0x1, w8
    1370:	e0 84 4c    	addc.w    w9, #0x0, w9
    1372:	09 88 a5    	btst.z    w9, w1
    1374:	05 00 32    	bra       Z, 0x1380 <packupandgo>
    1376:	8b 05 e8    	inc.w     w11, w11
    1378:	68 08 e1    	cp.w      w1, #0x8
    137a:	02 00 3a    	bra       NZ, 0x1380 <packupandgo>
    137c:	89 04 d1    	lsr.w     w9, w9
    137e:	08 84 d3    	rrc.w     w8, w8

00001380 <packupandgo>:
    1380:	f2 0f 20    	mov.w     #0xff, w2
    1382:	02 58 e1    	cp.w      w11, w2
    1384:	05 00 3d    	bra       GE, 0x1390 <overflow>
    1386:	c7 5d dd    	sl.w      w11, #0x7, w11
    1388:	f9 07 b2    	and.w     #0x7f, w9
    138a:	89 80 75    	ior.w     w11, w9, w1
    138c:	08 00 78    	mov.w     w8, w0
    138e:	00 00 06    	return    

00001390 <overflow>:
    1390:	0b f8 27    	mov.w     #0x7f80, w11

00001392 <zerosig>:
    1392:	8b 00 78    	mov.w     w11, w1
    1394:	00 00 05    	retlw.w   #0x0, w0
Disassembly of section .application_ivt:

00001000 <__DEFAULT_VECTOR-0x10c>:
    1000:	10 11 04    	goto      0x1110 <__reset>
    1002:	00 00 00 
    1004:	76 14 04    	goto      0x1476 <__DefaultInterrupt>
    1006:	00 00 00 
    1008:	76 14 04    	goto      0x1476 <__DefaultInterrupt>
    100a:	00 00 00 
    100c:	76 14 04    	goto      0x1476 <__DefaultInterrupt>
    100e:	00 00 00 
    1010:	76 14 04    	goto      0x1476 <__DefaultInterrupt>
    1012:	00 00 00 
    1014:	76 14 04    	goto      0x1476 <__DefaultInterrupt>
    1016:	00 00 00 
    1018:	76 14 04    	goto      0x1476 <__DefaultInterrupt>
    101a:	00 00 00 
    101c:	76 14 04    	goto      0x1476 <__DefaultInterrupt>
    101e:	00 00 00 
    1020:	76 14 04    	goto      0x1476 <__DefaultInterrupt>
    1022:	00 00 00 
    1024:	76 14 04    	goto      0x1476 <__DefaultInterrupt>
    1026:	00 00 00 
    1028:	76 14 04    	goto      0x1476 <__DefaultInterrupt>
    102a:	00 00 00 
    102c:	76 14 04    	goto      0x1476 <__DefaultInterrupt>
    102e:	00 00 00 
    1030:	76 14 04    	goto      0x1476 <__DefaultInterrupt>
    1032:	00 00 00 
    1034:	76 14 04    	goto      0x1476 <__DefaultInterrupt>
    1036:	00 00 00 
    1038:	76 14 04    	goto      0x1476 <__DefaultInterrupt>
    103a:	00 00 00 
    103c:	76 14 04    	goto      0x1476 <__DefaultInterrupt>
    103e:	00 00 00 
    1040:	76 14 04    	goto      0x1476 <__DefaultInterrupt>
    1042:	00 00 00 
    1044:	76 14 04    	goto      0x1476 <__DefaultInterrupt>
    1046:	00 00 00 
    1048:	76 14 04    	goto      0x1476 <__DefaultInterrupt>
    104a:	00 00 00 
    104c:	76 14 04    	goto      0x1476 <__DefaultInterrupt>
    104e:	00 00 00 
    1050:	76 14 04    	goto      0x1476 <__DefaultInterrupt>
    1052:	00 00 00 
    1054:	76 14 04    	goto      0x1476 <__DefaultInterrupt>
    1056:	00 00 00 
    1058:	76 14 04    	goto      0x1476 <__DefaultInterrupt>
    105a:	00 00 00 
    105c:	76 14 04    	goto      0x1476 <__DefaultInterrupt>
    105e:	00 00 00 
    1060:	76 14 04    	goto      0x1476 <__DefaultInterrupt>
    1062:	00 00 00 
    1064:	76 14 04    	goto      0x1476 <__DefaultInterrupt>
    1066:	00 00 00 
    1068:	76 14 04    	goto      0x1476 <__DefaultInterrupt>
    106a:	00 00 00 
    106c:	76 14 04    	goto      0x1476 <__DefaultInterrupt>
    106e:	00 00 00 
    1070:	76 14 04    	goto      0x1476 <__DefaultInterrupt>
    1072:	00 00 00 
    1074:	76 14 04    	goto      0x1476 <__DefaultInterrupt>
    1076:	00 00 00 
    1078:	76 14 04    	goto      0x1476 <__DefaultInterrupt>
    107a:	00 00 00 
    107c:	76 14 04    	goto      0x1476 <__DefaultInterrupt>
    107e:	00 00 00 
    1080:	76 14 04    	goto      0x1476 <__DefaultInterrupt>
    1082:	00 00 00 
    1084:	76 14 04    	goto      0x1476 <__DefaultInterrupt>
    1086:	00 00 00 
    1088:	76 14 04    	goto      0x1476 <__DefaultInterrupt>
    108a:	00 00 00 
    108c:	76 14 04    	goto      0x1476 <__DefaultInterrupt>
    108e:	00 00 00 
    1090:	76 14 04    	goto      0x1476 <__DefaultInterrupt>
    1092:	00 00 00 
    1094:	76 14 04    	goto      0x1476 <__DefaultInterrupt>
    1096:	00 00 00 
    1098:	76 14 04    	goto      0x1476 <__DefaultInterrupt>
    109a:	00 00 00 
    109c:	76 14 04    	goto      0x1476 <__DefaultInterrupt>
    109e:	00 00 00 
    10a0:	76 14 04    	goto      0x1476 <__DefaultInterrupt>
    10a2:	00 00 00 
    10a4:	76 14 04    	goto      0x1476 <__DefaultInterrupt>
    10a6:	00 00 00 
    10a8:	76 14 04    	goto      0x1476 <__DefaultInterrupt>
    10aa:	00 00 00 
    10ac:	76 14 04    	goto      0x1476 <__DefaultInterrupt>
    10ae:	00 00 00 
    10b0:	76 14 04    	goto      0x1476 <__DefaultInterrupt>
    10b2:	00 00 00 
    10b4:	76 14 04    	goto      0x1476 <__DefaultInterrupt>
    10b6:	00 00 00 
    10b8:	76 14 04    	goto      0x1476 <__DefaultInterrupt>
    10ba:	00 00 00 
    10bc:	76 14 04    	goto      0x1476 <__DefaultInterrupt>
    10be:	00 00 00 
    10c0:	76 14 04    	goto      0x1476 <__DefaultInterrupt>
    10c2:	00 00 00 
    10c4:	76 14 04    	goto      0x1476 <__DefaultInterrupt>
    10c6:	00 00 00 
    10c8:	76 14 04    	goto      0x1476 <__DefaultInterrupt>
    10ca:	00 00 00 
    10cc:	76 14 04    	goto      0x1476 <__DefaultInterrupt>
    10ce:	00 00 00 
    10d0:	76 14 04    	goto      0x1476 <__DefaultInterrupt>
    10d2:	00 00 00 
    10d4:	76 14 04    	goto      0x1476 <__DefaultInterrupt>
    10d6:	00 00 00 
    10d8:	76 14 04    	goto      0x1476 <__DefaultInterrupt>
    10da:	00 00 00 
    10dc:	76 14 04    	goto      0x1476 <__DefaultInterrupt>
    10de:	00 00 00 
    10e0:	76 14 04    	goto      0x1476 <__DefaultInterrupt>
    10e2:	00 00 00 
    10e4:	76 14 04    	goto      0x1476 <__DefaultInterrupt>
    10e6:	00 00 00 
    10e8:	76 14 04    	goto      0x1476 <__DefaultInterrupt>
    10ea:	00 00 00 
    10ec:	76 14 04    	goto      0x1476 <__DefaultInterrupt>
    10ee:	00 00 00 
    10f0:	76 14 04    	goto      0x1476 <__DefaultInterrupt>
    10f2:	00 00 00 
    10f4:	76 14 04    	goto      0x1476 <__DefaultInterrupt>
    10f6:	00 00 00 
    10f8:	76 14 04    	goto      0x1476 <__DefaultInterrupt>
    10fa:	00 00 00 
    10fc:	76 14 04    	goto      0x1476 <__DefaultInterrupt>
    10fe:	00 00 00 
    1100:	76 14 04    	goto      0x1476 <__DefaultInterrupt>
    1102:	00 00 00 
    1104:	76 14 04    	goto      0x1476 <__DefaultInterrupt>
    1106:	00 00 00 
    1108:	76 14 04    	goto      0x1476 <__DefaultInterrupt>
    110a:	00 00 00 

0000110c <__DEFAULT_VECTOR>:
    110c:	76 14 04    	goto      0x1476 <__DefaultInterrupt>
    110e:	00 00 00 
Disassembly of section .ivt:

00000004 <.ivt>:
   4:	04 10 00    	nop       
   6:	08 10 00    	nop       
   8:	0c 10 00    	nop       
   a:	10 10 00    	nop       
   c:	14 10 00    	nop       
   e:	0c 11 00    	nop       
  10:	0c 11 00    	nop       
  12:	0c 11 00    	nop       
  14:	18 10 00    	nop       
  16:	1c 10 00    	nop       
  18:	20 10 00    	nop       
  1a:	24 10 00    	nop       
  1c:	0c 11 00    	nop       
  1e:	28 10 00    	nop       
  20:	2c 10 00    	nop       
  22:	30 10 00    	nop       
  24:	34 10 00    	nop       
  26:	38 10 00    	nop       
  28:	3c 10 00    	nop       
  2a:	40 10 00    	nop       
  2c:	44 10 00    	nop       
  2e:	48 10 00    	nop       
  30:	0c 11 00    	nop       
  32:	0c 11 00    	nop       
  34:	4c 10 00    	nop       
  36:	50 10 00    	nop       
  38:	54 10 00    	nop       
  3a:	58 10 00    	nop       
  3c:	5c 10 00    	nop       
  3e:	0c 11 00    	nop       
  40:	60 10 00    	nop       
  42:	64 10 00    	nop       
  44:	0c 11 00    	nop       
  46:	68 10 00    	nop       
  48:	6c 10 00    	nop       
  4a:	70 10 00    	nop       
  4c:	74 10 00    	nop       
  4e:	78 10 00    	nop       
  50:	7c 10 00    	nop       
  52:	80 10 00    	nop       
  54:	84 10 00    	nop       
  56:	88 10 00    	nop       
  58:	0c 11 00    	nop       
  5a:	0c 11 00    	nop       
  5c:	0c 11 00    	nop       
  5e:	8c 10 00    	nop       
  60:	90 10 00    	nop       
  62:	94 10 00    	nop       
  64:	98 10 00    	nop       
  66:	9c 10 00    	nop       
  68:	a0 10 00    	nop       
  6a:	a4 10 00    	nop       
  6c:	a8 10 00    	nop       
  6e:	ac 10 00    	nop       
  70:	0c 11 00    	nop       
  72:	0c 11 00    	nop       
  74:	0c 11 00    	nop       
  76:	b0 10 00    	nop       
  78:	b4 10 00    	nop       
  7a:	0c 11 00    	nop       
  7c:	0c 11 00    	nop       
  7e:	b8 10 00    	nop       
  80:	bc 10 00    	nop       
  82:	0c 11 00    	nop       
  84:	0c 11 00    	nop       
  86:	0c 11 00    	nop       
  88:	0c 11 00    	nop       
  8a:	0c 11 00    	nop       
  8c:	0c 11 00    	nop       
  8e:	0c 11 00    	nop       
  90:	c0 10 00    	nop       
  92:	0c 11 00    	nop       
  94:	0c 11 00    	nop       
  96:	c4 10 00    	nop       
  98:	c8 10 00    	nop       
  9a:	cc 10 00    	nop       
  9c:	0c 11 00    	nop       
  9e:	0c 11 00    	nop       
  a0:	0c 11 00    	nop       
  a2:	0c 11 00    	nop       
  a4:	d0 10 00    	nop       
  a6:	0c 11 00    	nop       
  a8:	0c 11 00    	nop       
  aa:	0c 11 00    	nop       
  ac:	0c 11 00    	nop       
  ae:	d4 10 00    	nop       
  b0:	0c 11 00    	nop       
  b2:	0c 11 00    	nop       
  b4:	0c 11 00    	nop       
  b6:	d8 10 00    	nop       
  b8:	dc 10 00    	nop       
  ba:	e0 10 00    	nop       
  bc:	e4 10 00    	nop       
  be:	e8 10 00    	nop       
  c0:	ec 10 00    	nop       
  c2:	f0 10 00    	nop       
  c4:	f4 10 00    	nop       
  c6:	f8 10 00    	nop       
  c8:	fc 10 00    	nop       
  ca:	00 11 00    	nop       
  cc:	04 11 00    	nop       
  ce:	08 11 00    	nop       
  d0:	0c 11 00    	nop       
  d2:	0c 11 00    	nop       
  d4:	0c 11 00    	nop       
  d6:	0c 11 00    	nop       
  d8:	0c 11 00    	nop       
  da:	0c 11 00    	nop       
  dc:	0c 11 00    	nop       
  de:	0c 11 00    	nop       
  e0:	0c 11 00    	nop       
  e2:	0c 11 00    	nop       
  e4:	0c 11 00    	nop       
  e6:	0c 11 00    	nop       
  e8:	0c 11 00    	nop       
  ea:	0c 11 00    	nop       
  ec:	0c 11 00    	nop       
  ee:	0c 11 00    	nop       
  f0:	0c 11 00    	nop       
  f2:	0c 11 00    	nop       
  f4:	0c 11 00    	nop       
  f6:	0c 11 00    	nop       
  f8:	0c 11 00    	nop       
  fa:	0c 11 00    	nop       
  fc:	0c 11 00    	nop       
  fe:	0c 11 00    	nop       
Disassembly of section .text:

00001396 <_init_elecanisms>:
*/

#include "elecanisms.h"

void init_elecanisms(void) {
    1396:	00 00 fa    	lnk       #0x0
    CLKDIV = 0x0100;        // RCDIV = 001 (4MHz, div2), 
    1398:	00 10 20    	mov.w     #0x100, w0
    139a:	20 3a 88    	mov.w     w0, 0x744
                            // CPDIV = 00 (FOSC = 32MHz, FCY = 16MHz)

    // Configure all pins on the digital headers to be inputs
    D0_DIR = IN;
    139c:	d8 a2 a8    	bset.b    0x2d8, #0x5
    D1_DIR = IN;
    139e:	d8 82 a8    	bset.b    0x2d8, #0x4
    D2_DIR = IN;
    13a0:	e8 82 a8    	bset.b    0x2e8, #0x4
    D3_DIR = IN;
    13a2:	e8 a2 a8    	bset.b    0x2e8, #0x5
    D4_DIR = IN;
    13a4:	c9 e2 a8    	bset.b    0x2c9, #0x7
    D5_DIR = IN;
    13a6:	e8 62 a8    	bset.b    0x2e8, #0x3
    D6_DIR = IN;
    13a8:	d9 02 a8    	bset.b    0x2d9, #0x0
    D7_DIR = IN;
    13aa:	d9 62 a8    	bset.b    0x2d9, #0x3
    D8_DIR = IN;
    13ac:	d9 22 a8    	bset.b    0x2d9, #0x1
    D9_DIR = IN;
    13ae:	d9 42 a8    	bset.b    0x2d9, #0x2
    D10_DIR = IN;
    13b0:	d8 02 a8    	bset.b    0x2d8, #0x0
    D11_DIR = IN;
    13b2:	d8 22 a8    	bset.b    0x2d8, #0x1
    D12_DIR = IN;
    13b4:	d8 42 a8    	bset.b    0x2d8, #0x2
    D13_DIR = IN;
    13b6:	d8 62 a8    	bset.b    0x2d8, #0x3

    // Configure all pins on the analog header to be inputs
    A0_DIR = IN;
    13b8:	c8 a2 a8    	bset.b    0x2c8, #0x5
    A1_DIR = IN;
    13ba:	c8 82 a8    	bset.b    0x2c8, #0x4
    A2_DIR = IN;
    13bc:	c8 62 a8    	bset.b    0x2c8, #0x3
    A3_DIR = IN;
    13be:	c8 42 a8    	bset.b    0x2c8, #0x2
    A4_DIR = IN;
    13c0:	c8 22 a8    	bset.b    0x2c8, #0x1
    A5_DIR = IN;
    13c2:	c8 02 a8    	bset.b    0x2c8, #0x0

    // Make all pins digital I/Os except for A0,...,A5
    ANSB = 0x003F;
    13c4:	f0 03 20    	mov.w     #0x3f, w0
    13c6:	10 27 88    	mov.w     w0, 0x4e2
    ANSC = 0;
    13c8:	e4 24 ef    	clr.w     0x4e4
    ANSD = 0;
    13ca:	e6 24 ef    	clr.w     0x4e6
    ANSF = 0;
    13cc:	ea 24 ef    	clr.w     0x4ea
    ANSG = 0;
    13ce:	ec 24 ef    	clr.w     0x4ec

    // Configure and enable the ADC module: 
    //   set output data format to integer (FORM<1:0> = 0b00)
    //   set conversion trigger source select bits to internal counter 
    //     (SSRC<2:0> = 0b111)
    //   set auto-sample time bits to 12*TAD (SAMC<4:0> = 12)
    //   set conversion clock select bits to 64*TCY (ADCS<7:0> = 64)
    //   set initial channel selection to A0
    AD1CON1 = 0x00E0; 
    13d0:	00 0e 20    	mov.w     #0xe0, w0
    13d2:	00 19 88    	mov.w     w0, 0x320
    AD1CON2 = 0;
    13d4:	22 23 ef    	clr.w     0x322
    AD1CON3 = 0x0C40;
    13d6:	00 c4 20    	mov.w     #0xc40, w0
    13d8:	20 19 88    	mov.w     w0, 0x324
    AD1CHS = A0_AN;
    13da:	50 00 20    	mov.w     #0x5, w0
    13dc:	40 19 88    	mov.w     w0, 0x328
    AD1CON1bits.ADON = 1;
    13de:	21 e3 a8    	bset.b    0x321, #0x7

    // Configure LED pins as outputs, set to low (off)
    LED1_DIR = OUT; LED1 = 0;
    13e0:	d8 e2 a9    	bclr.b    0x2d8, #0x7
    13e2:	da e2 a9    	bclr.b    0x2da, #0x7
    LED2_DIR = OUT; LED2 = 0;
    13e4:	e8 02 a9    	bclr.b    0x2e8, #0x0
    13e6:	ea 02 a9    	bclr.b    0x2ea, #0x0
    LED3_DIR = OUT; LED3 = 0;
    13e8:	e8 22 a9    	bclr.b    0x2e8, #0x1
    13ea:	ea 22 a9    	bclr.b    0x2ea, #0x1

    // Configure SW pins as inputs
    SW1_DIR = IN;
    13ec:	d1 e2 a8    	bset.b    0x2d1, #0x7
    SW2_DIR = IN;
    13ee:	d1 82 a8    	bset.b    0x2d1, #0x4
    SW3_DIR = IN;
    13f0:	c9 82 a8    	bset.b    0x2c9, #0x4
}
    13f2:	00 80 fa    	ulnk      
    13f4:	00 00 06    	return    

000013f6 <_read_analog>:

uint16_t read_analog(uint16_t pin_an) {
    13f6:	02 00 fa    	lnk       #0x2
    13f8:	00 0f 78    	mov.w     w0, [w14]
    AD1CHS = pin_an;
    13fa:	9e 00 78    	mov.w     [w14], w1
    13fc:	41 19 88    	mov.w     w1, 0x328
    AD1CON1bits.SAMP = 1;
    13fe:	20 23 a8    	bset.b    0x320, #0x1
    while (AD1CON1bits.DONE == 0) {}
    1400:	00 00 00    	nop       

00001402 <.L3>:
    1402:	00 19 80    	mov.w     0x320, w0
    1404:	61 00 60    	and.w     w0, #0x1, w0
    1406:	00 00 e0    	cp0.w     w0
    1408:	fc ff 32    	bra       Z, 0x1402 <.L3>
    return ADC1BUF0;
    140a:	00 18 80    	mov.w     0x300, w0
}
    140c:	00 80 fa    	ulnk      
    140e:	00 00 06    	return    

00001410 <_main>:
    1410:	10 00 fa    	lnk       #0x10
    1412:	88 1f 78    	mov.w     w8, [w15++]
    1414:	c0 ff 07    	rcall     0x1396 <_init_elecanisms> <.L0> <.LFB0> <.Ltext0>
    1416:	00 00 eb    	clr.w     w0
    1418:	fd fe 07    	rcall     0x1214 <_time>
    141a:	00 8f be    	mov.d     w0, [w14]
    141c:	2e 01 90    	mov.w     [w14+4], w2
    141e:	be 01 90    	mov.w     [w14+6], w3
    1420:	1e 00 be    	mov.d     [w14], w0
    1422:	40 ff 07    	rcall     0x12a4 <_difftime>
    1424:	40 07 98    	mov.w     w0, [w14+8]
    1426:	51 07 98    	mov.w     w1, [w14+10]
    1428:	da e2 a9    	bclr.b    0x2da, #0x7
    142a:	ea 02 a9    	bclr.b    0x2ea, #0x0
    142c:	ea 22 a9    	bclr.b    0x2ea, #0x1
    142e:	01 00 37    	bra       0x1432 <.L6> <.LBB2>

00001430 <.L7>:
    1430:	00 00 00    	nop       

00001432 <.L6>:
    1432:	00 00 eb    	clr.w     w0
    1434:	ef fe 07    	rcall     0x1214 <_time>
    1436:	00 8f be    	mov.d     w0, [w14]
    1438:	2e 01 90    	mov.w     [w14+4], w2
    143a:	be 01 90    	mov.w     [w14+6], w3
    143c:	1e 00 be    	mov.d     [w14], w0
    143e:	32 ff 07    	rcall     0x12a4 <_difftime>
    1440:	60 07 98    	mov.w     w0, [w14+12]
    1442:	71 07 98    	mov.w     w1, [w14+14]
    1444:	18 c0 b3    	mov.b     #0x1, w8
    1446:	02 00 20    	mov.w     #0x0, w2
    1448:	03 0a 24    	mov.w     #0x40a0, w3
    144a:	6e 00 90    	mov.w     [w14+12], w0
    144c:	fe 00 90    	mov.w     [w14+14], w1
    144e:	f0 fe 07    	rcall     0x1230 <___gesf2> <___gtsf2>
    1450:	00 00 e0    	cp0.w     w0
    1452:	01 00 3c    	bra       GT, 0x1456 <.L2>
    1454:	00 44 eb    	clr.b     w8

00001456 <.L2>:
    1456:	08 04 e0    	cp0.b     w8
    1458:	01 00 32    	bra       Z, 0x145c <.L3>
    145a:	da e2 a8    	bset.b    0x2da, #0x7

0000145c <.L3>:
    145c:	18 c0 b3    	mov.b     #0x1, w8
    145e:	02 00 20    	mov.w     #0x0, w2
    1460:	03 0a 24    	mov.w     #0x40a0, w3
    1462:	6e 00 90    	mov.w     [w14+12], w0
    1464:	fe 00 90    	mov.w     [w14+14], w1
    1466:	e2 fe 07    	rcall     0x122c <___eqsf2> <___lesf2> <___ltsf2>
    1468:	00 00 e0    	cp0.w     w0
    146a:	01 00 35    	bra       LT, 0x146e <.L4>
    146c:	00 44 eb    	clr.b     w8

0000146e <.L4>:
    146e:	08 04 e0    	cp0.b     w8
    1470:	df ff 32    	bra       Z, 0x1430 <.L7>
    1472:	ea 02 a8    	bset.b    0x2ea, #0x0

00001474 <.LBE2>:
    1474:	de ff 37    	bra       0x1432 <.L6> <.LBB2>
Disassembly of section .isr:

00001476 <__DefaultInterrupt>:
    1476:	00 40 da    	break     
    1478:	00 00 fe    	reset     
